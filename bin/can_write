#!/usr/bin/env ruby

require 'fileutils'

if File.expand_path(__FILE__) == File.expand_path(File.join(Dir.pwd, 'can_write'))
  puts "Run it from you app folder, containing can_wrtie file with permissions"
  exit
end

unless  File.file?(File.join Dir.pwd, 'can_write')
  puts "No can_write file found at #{Dir.pwd}"
  exit
end

VERBOSE = false

class Horse
  class << self
    attr_accessor :conf
  end
  @conf = []

  def go!
    self.class.conf.each do |rule|
      rule[:dirs].each do |dir|
        FileUtils.chown rule[:user], rule[:user], dir, :verbose => VERBOSE if rule[:user] != 'any'
        FileUtils.chmod_R 0777, dir, :verbose => VERBOSE if rule[:access] == :execute
        FileUtils.chmod_R 0666, dir, :verbose => VERBOSE if rule[:access] == :write
        FileUtils.chmod_R 0444, dir, :verbose => VERBOSE if rule[:access] == :read
      end
    end
  end
end

class Array
  def should_be_writable
    store_condition :write
  end

  def should_be_readable
    store_condition :read
  end

  def should_be_executable
    store_condition :execute
  end
  
  private 

  def store_condition access
    hash = {:user => 'any', :access => access, :dirs => self}
    Horse.conf << hash
    hash
  end
end

class Hash
  def by_user user
    self[:user] = user
  end
end

at_exit { Horse.new.go! }

load File.join Dir.pwd, 'can_write'
